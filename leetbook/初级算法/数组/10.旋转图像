#    LeetCode 48. 旋转图像

给定一个 n × n 的二维矩阵表示一个图像。</br>
将图像顺时针旋转 90 度。</br>
**说明** ：</br>
你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。</br>

</br></br></br>

##    自己解法-以外圈向内延伸：
循环数组：</br>
若当前位i上的值为0，则between加1；</br>
若不为0，则让i-between位的数等于i位的不为零的数，即前移，同时将i位归零。</br>
注意边界：若between还为0，则不需要将i位归零处理。</br>
```
class Solution {
    public void rotate(int[][] matrix) {
        for(int i=0;i<matrix.length;i++){
            for(int j=i;j<matrix[i].length-1-i;j++){
                int tmp = matrix[i][j];
                matrix[i][j]=matrix[matrix.length-1-j][i];
                matrix[matrix.length-1-j][i]=matrix[matrix.length-1-i][matrix[i].length-1-j];
                matrix[matrix.length-1-i][matrix[i].length-1-j]=matrix[j][matrix.length-1-i];
                matrix[j][matrix.length-1-i]=tmp;
            }
        }
    }
}
```
```
执行用时：0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗：38.7 MB, 在所有 Java 提交中击败了91.70%的用户
```
